/**
 * 颠倒给定的32位无符号整数的二进制位。
 * @param {number} n - 一个正整数
 * @return {number} - 一个正整数
 */
var reverseBits = function(n) {
  // 初始化结果变量为0
  let ans = 0;
  // 循环32次，因为是32位整数
  for (let i = 0; i < 32 && n > 0; i++) {
    // 将n的最后一位与1进行与运算，得到最后一位的值（0或1）
    // 然后将这个值左移31 - i位，再与ans进行或运算，将这一位添加到结果中
    ans |= (n & 1) << (31 - i);
    // 将n右移一位，去掉已经处理过的最后一位
    n >>>= 1;
  }
  // 将结果转换为无符号32位整数并返回
  return ans >>> 0;
};
